#/bin/bash
# where am i? move to where I am. This ensures source is properly sourced
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd $DIR

while [ $# -gt 0 ]; do
  ARGUMENT=$1 # example --name=value

  ARGUMENT=$(sed 's/=.*$//g' <<< "$ARGUMENT")
  ARGUMENT=$(sed 's/--//g' <<< "$ARGUMENT")

  VALUE="${1#*=}"
  case $ARGUMENT in
  "action")
    ARG_ACTION=$VALUE
    ;;
  "folder")
    ARG_FOLDER=$VALUE
    ;;
  "shortname")
    ARG_SHORTNAME=$VALUE
    ;;
  esac
  shift
done

if [[ $ARG_ACTION == "sync" ]]; then
  echo "Syncing from vagrant to web directory"
  SOURCE="/vagrant/www/$ARG_FOLDER/"
  DESTINATION="/var/www/$ARG_FOLDER/"
  #VAGRANT SSH
  echo "#################################"
vagrant ssh -- -T << SYNC
sudo rsync --chmod=ug+rwX -rtlp $SOURCE $DESTINATION
SYNC
  echo "#################################"

  #/VAGRANT SSH
fi

if [[ $ARG_ACTION == "vhost" ]]; then
  # REQURED PARAMS:
  # --action=vhost
  # --shortname=
  # --folder=
  # cp vhost-template.conf to new site conf
  SITE_CONF="vagrant-$ARG_SHORTNAME.local.conf"
  cp vhost-template.conf $SITE_CONF
  # replace 'REPLACESHORTNAME' with $ARG_SHORTNAME and
  sed -i s/REPLACESHORTNAME/$ARG_SHORTNAME/g $SITE_CONF
  # replace 'REPLACEFOLDER' with $ARG_FOLDER in vhost file
  sed -i s/REPLACEFOLDER/$ARG_FOLDER/g $SITE_CONF

vagrant ssh -- -T << VHOST
cd /vagrant
# mv new site conf to /etc/apache2/sites-available
sudo mv $SITE_CONF /etc/apache2/sites-available/$SITE_CONF
# enable the newly created site/vhost
sudo a2ensite $SITE_CONF
# reload apache2 so vhosts take effect
sudo service apache2 restart
VHOST
  echo "echoing vagrant ip:"
  VM_IP=$(cat $DIR/puphpet/config.yaml | grep 'private_network: ' | sed -e 's/^.*private_network: //' -e 's/\/.*$//')
  echo $VM_IP
  LOCAL_DOMAIN="vagrant-$ARG_SHORTNAME.local"
  HOSTS_LINE="$VM_IP  $LOCAL_DOMAIN"
  $(grep "$HOSTS_LINE" /etc/hosts) || sudo -- sh -c -e "echo '$HOSTS_LINE' >> /etc/hosts"
fi
